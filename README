KCachegrind / QCachegrind
-========================

{K,Q}Cachegrind is a KDE/Qt GUI to visualize profiling data.
It's mainly used as visualization frontend for data measured
by Cachegrind/Callgrind tools from the Valgrind package, but
there are converters for other measurement tools available.

Features

* direct support for profiles generated by Cachegrind/Callgrind
* support for arbitrary event types and derived event types
* sorted function list, with grouping according to ELF object/source
  file/symbol namespace (such as C++ classes)
* correct handling of recursive cycles (similar to GProf)
* various visualization views for a selected function, such as
  - treemap in caller/callee direction
  - call graph around function
  - source & assembly annotation


Hmm. What is stuff good for?
----------------------------

Any work in improving the performance of a program should be
started with measuring the performance characteristics of the
optimized binary, using representative input data. This process
is called "Profiling". Any other way for performance optimization
usually just wastes developer time.
Propfile measurements show whether optimization is needed at all,
and what improvement can be expected. Further, it pinpoint at
functions and source lines where most time is spent, i.e. where an
improvement has most influence on allover runtime.

{K,Q}Cachegrind visualizes profile measurement data. Example of an
easy to use profile measurement tool (no source modifications and
recompilation is required, as well as no root access) are the
cache simulators Cachegrind and Callgrind from the Valgrind toolset.
While {K,Q}Cachegrind directly supports the formats of these
profiling tools, converters are available to allow to import data
from other profiling tools, too.



Compilation and Installation
-===========================


QCachegrind only
----------------

Requirements:
* Qt 4.5 or higher (earlier Qt 4.x versions may work, but not tested)
* Any platform supported by Qt4 (Linux, Windows, Mac OS X, ...)

Compilation (from base directory):
* "qmake; make; make install"



KCachegrind
------------

Requirements:
* KDE 4.3 or higher: kdelibs development packages (libs & headers)
* CMake

Commands (from basee directory):
* "cmake .; make; make install"



Usage & Help
-===========

{K,Q}Cachegrind has detailed "What's this?" help for
each GUI part. For further help, see quick starter pages
on kcachegrind.sf.net



 Josef Weidendorfer
